{"version":3,"sources":["webpack://computer-science/./typescript/src/index2.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,eAAe,SAAI,IAAI,SAAI;AAC3B,mCAAmC,oCAAoC;AACvE;AAC0D;AAChC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qDAAU;AAClB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qDAAU;AAClB,mBAAmB,iDAAM;AACzB,mBAAmB,iDAAM;AACzB;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,sBAAsB,gDAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD","file":"typescript_src_index2_ts.js","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { injectable, inject, Container } from 'inversify';\r\nimport \"reflect-metadata\";\r\nvar TYPES = {\r\n    Katana: Symbol.for(\"Katana\"),\r\n    Shuriken: Symbol.for(\"Shuriken\"),\r\n};\r\nvar Katana = /** @class */ (function () {\r\n    function Katana() {\r\n    }\r\n    Katana.prototype.hit = function () {\r\n        console.log('cut');\r\n        return \"cut!\";\r\n    };\r\n    Katana = __decorate([\r\n        injectable()\r\n    ], Katana);\r\n    return Katana;\r\n}());\r\nvar Shuriken = /** @class */ (function () {\r\n    function Shuriken(katana, katana2) {\r\n        this.katana = katana;\r\n        this.katana2 = katana2;\r\n    }\r\n    Shuriken.prototype.throw = function () {\r\n        return \"hit!\";\r\n    };\r\n    Shuriken = __decorate([\r\n        injectable(),\r\n        __param(0, inject(TYPES.Katana)),\r\n        __param(1, inject(TYPES.Katana)),\r\n        __metadata(\"design:paramtypes\", [Katana,\r\n            Katana])\r\n    ], Shuriken);\r\n    return Shuriken;\r\n}());\r\n/**\r\n * ioc容器：\r\n *\r\n * 1. 将所有类都注入到容器中，作为依赖使用\r\n */\r\nvar myContainer = new Container();\r\nmyContainer.bind(TYPES.Shuriken).to(Shuriken);\r\nmyContainer.bind(TYPES.Katana).to(Katana);\r\n/**\r\n * 从容器中获取到指定token的依赖的实例\r\n */\r\nvar shuriken = myContainer.get(TYPES.Shuriken);\r\nshuriken.katana.hit();\r\nvar Test = /** @class */ (function () {\r\n    function Test() {\r\n    }\r\n    return Test;\r\n}());\r\nconsole.log(Reflect.getMetadataKeys(Test));\r\n"],"sourceRoot":""}